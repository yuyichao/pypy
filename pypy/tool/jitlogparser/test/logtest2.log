[3304d0bb187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5000 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[3304d0ca602] jit-backend-dump}
[3304d0cfdf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5085 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000488B1C25C802190348C70425C00219030000000048C70425C80219030000000048895D38584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[3304d0d2b27] jit-backend-dump}
[3304d0d73d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d512e +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBC069120141FFD3488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3304d0d9073] jit-backend-dump}
[3304d0db1d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5191 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB006B120141FFD3488B442408F6400480488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3304d0dce9e] jit-backend-dump}
[3304d0dfc06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d51fd +0  4883EC384889442408F20F114424184889EF48895C24284C89642430488B1C25C80219034C8B2425C002190348C70425C00219030000000048C70425C80219030000000041BBC069120141FFD3F20F10442418488B44240848891C25C80219034C892425C0021903488B5C24284C8B642430488D642438C3
[3304d0e1a04] jit-backend-dump}
[3304d0e4ae5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5275 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000F20F1185C0000000F20F118DC8000000F20F1195D0000000F20F119DD8000000F20F11A5E0000000F20F11ADE8000000F20F11B5F0000000F20F11BDF8000000F2440F118500010000F2440F118D08010000F2440F119510010000F2440F119D18010000F2440F11A520010000F2440F11AD28010000F2440F11B530010000488B4C240848894D20488B7424104889EF4883EC0848C7452810000000488B0C25C802190348894D38488B1C25C002190348C70425C00219030000000048C70425C80219030000000041BB90E3E80041FFD34889C5488B4D3848C745380000000048890C25C802190348891C25C00219034883C40848C745280000000048C7452000000000488B4D58488B4560488B5568488B5D70488B7578488BBD800000004C8B85880000004C8B8D900000004C8B95980000004C8BA5A00000004C8BADA80000004C8BB5B00000004C8BBDB8000000F20F1085C0000000F20F108DC8000000F20F1095D0000000F20F109DD8000000F20F10A5E0000000F20F10ADE8000000F20F10B5F0000000F20F10BDF8000000F2440F108500010000F2440F108D08010000F2440F109510010000F2440F109D18010000F2440F10A520010000F2440F10AD28010000F2440F10B530010000C3
[3304d0e9130] jit-backend-dump}
[3304d0ea4a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d
[3304d0ecf16] jit-backend-dump}
[3304d0ee1ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d
[3304d0fca06] jit-backend-dump}
[3304d0fe4ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d56bd
[3304d1018ac] jit-backend-dump}
[3304d103089] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d581e
[3304d1062c0] jit-backend-dump}
[3304d1072c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5988 +0  488B0425C802190348C70425C00219030000000048C70425C8021903000000004889453848C745108064B5014889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[3304d1089ec] jit-backend-dump}
[3304d11572c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d59e
[3304d120245] jit-backend-dump}
[3304d122916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5bd6 +0  4889E74883EC0841BB9018210141FFD34883C408488B0425C00219034885C07501C34883C40849BB88597D6A477F000041FFE3
[3304d1240c0] jit-backend-dump}
[3304d1246a0] {jit-backend-counts
[3304d124ab0] jit-backend-counts}
[3304d690a50] {jit-backend
[3304db64ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5ce
[3304db7d5e4] jit-backend-dump}
[3304db7df74] {jit-backend-addr
Loop 0 (<code object g, file 'x.py', line 8> #9 LOAD_FAST) has address 0x7f476a7d5d30 to 0x7f476a7d5e80 (bootstrap 0x7f476a7d5ce0)
[3304db7f906] jit-backend-addr}
[3304db8036d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5de1 +0  9B000000
[3304db81160] jit-backend-dump}
[3304db81772] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5df3 +0  AE000000
[3304db8217a] jit-backend-dump}
[3304db825e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5dfd +0  C9000000
[3304db82ee8] jit-backend-dump}
[3304db83330] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5e10 +0  DB000000
[3304db83c9d] jit-backend-dump}
[3304db840c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5e1e +0  F2000000
[3304db849f0] jit-backend-dump}
[3304db84f62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5e35 +0  25010000
[3304db8586f] jit-backend-dump}
[3304db85c9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5e5e +0  21010000
[3304db86572] jit-backend-dump}
[3304db869e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d5e74 +0  55010000
[3304db872e3] jit-backend-dump}
[3304db88112] jit-backend}
[3304db8ae6c] {jit-log-opt-loop
# Loop 0 (<code object g, file 'x.py', line 8> #9 LOAD_FAST) : loop with 59 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(139944714371104))
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
+251: guard_value(i7, 2, descr=<Guard7f476afd2020>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+261: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard7f476b030638>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15, p17]
+279: guard_value(i5, 0, descr=<Guard7f476b0305c0>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #12 LOAD_CONST')
+289: guard_value(p4, ConstPtr(ptr22), descr=<Guard7f476b030548>) [p1, p0, p4, p2, p3, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #15 COMPARE_OP')
+308: i23 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+312: i25 = int_lt(i23, 10)
guard_true(i25, descr=<Guard7f476b0304d0>) [p1, p0, p11, p2, p3, p6, p13]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #21 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #24 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #33 INPLACE_ADD')
+322: i27 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #34 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #37 JUMP_ABSOLUTE')
+327: guard_not_invalidated(descr=<Guard7f476b030458>) [p1, p0, p2, p3, p6, i27]
+327: i29 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+335: i31 = int_lt(i29, 0)
guard_false(i31, descr=<Guard7f476b0303e0>) [p1, p0, p2, p3, p6, i27]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
+345: label(p0, p1, p2, p3, p6, i27, descr=TargetToken(139944714371192))
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #15 COMPARE_OP')
+376: i32 = int_lt(i27, 10)
guard_true(i32, descr=<Guard7f476b030368>) [p1, p0, p2, p3, p6, i27]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #21 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #24 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #33 INPLACE_ADD')
+386: i33 = int_add(i27, 1)
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #34 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #37 JUMP_ABSOLUTE')
+390: guard_not_invalidated(descr=<Guard7f476b0302f0>) [p1, p0, p2, p3, p6, i33, None]
+390: i35 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+398: i36 = int_lt(i35, 0)
guard_false(i36, descr=<Guard7f476b030278>) [p1, p0, p2, p3, p6, i33, None]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
+408: jump(p0, p1, p2, p3, p6, i33, descr=TargetToken(139944714371192))
+416: --end of the loop--
[3304dc0f6eb] jit-log-opt-loop}
[3304ddc81da] {jit-backend
[3304dec8bed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d
[3304dedb0c9] jit-backend-dump}
[3304dedb9eb] {jit-backend-addr
Loop 1 (<code object h, file 'x.py', line 14> #13 FOR_ITER) has address 0x7f476a7d6178 to 0x7f476a7d6470 (bootstrap 0x7f476a7d6128)
[3304dedcbfe] jit-backend-addr}
[3304dedd31e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d6222 +0  4A020000
[3304dede364] jit-backend-dump}
[3304dede8d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d622e +0  63020000
[3304dedf2ce] jit-backend-dump}
[3304dedf728] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d623b +0  7B020000
[3304dedffef] jit-backend-dump}
[3304dee040e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d624f +0  8C020000
[3304dee0d4e] jit-backend-dump}
[3304dee115b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d6269 +0  97020000
[3304dee1a98] jit-backend-dump}
[3304dee1e9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d6272 +0  B3020000
[3304dee2789] jit-backend-dump}
[3304dee2bb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d6291 +0  B9020000
[3304dee34bf] jit-backend-dump}
[3304dee38cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d62a2 +0  CD020000
[3304dee41c5] jit-backend-dump}
[3304dee45e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d632d +0  67020000
[3304dee4ec5] jit-backend-dump}
[3304dee543c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d635d +0  81020000
[3304dee5d03] jit-backend-dump}
[3304dee6139] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d6377 +0  8C020000
[3304dee69fa] jit-backend-dump}
[3304dee6e10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d63a2 +0  86020000
[3304dee9db8] jit-backend-dump}
[3304deea2e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d6426 +0  27020000
[3304deeac17] jit-backend-dump}
[3304deeb092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f476a7d644f +0  48020000
[3304deeb97f] jit-backend-dump}
[3304deec304] jit-backend}
[3304deed1f1] {jit-log-opt-loop
# Loop 1 (<code object h, file 'x.py', line 14> #13 FOR_ITER) : loop with 82 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(139944753096184))
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+244: guard_value(i7, 3, descr=<Guard7f476d49d6a0>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+254: guard_class(p15, 25719440, descr=<Guard7f476d4d8a70>) [p1, p0, p15, p2, p3, p4, i5, p6, p11, p13, p17]
+266: p21 = getfield_gc(p15, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+270: guard_nonnull(p21, descr=<Guard7f476d4d89f8>) [p1, p0, p15, p21, p2, p3, p4, i5, p6, p11, p13, p17]
+279: i22 = getfield_gc(p15, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+283: p23 = getfield_gc(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+287: guard_class(p23, 26050592, descr=<Guard7f476d4d8980>) [p1, p0, p15, i22, p23, p21, p2, p3, p4, i5, p6, p11, p13, p17]
+299: p25 = getfield_gc(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+303: i26 = getfield_gc_pure(p25, descr=<FieldS tuple3.item0 8>)
+307: i27 = getfield_gc_pure(p25, descr=<FieldS tuple3.item1 16>)
+311: i28 = getfield_gc_pure(p25, descr=<FieldS tuple3.item2 24>)
+315: i30 = int_lt(i22, 0)
guard_false(i30, descr=<Guard7f476d4d8908>) [p1, p0, p15, i22, i28, i27, i26, p2, p3, p4, i5, p6, p11, p13, p17]
+325: i31 = int_ge(i22, i28)
guard_false(i31, descr=<Guard7f476d4d8890>) [p1, p0, p15, i22, i27, i26, p2, p3, p4, i5, p6, p11, p13, p17]
+334: i32 = int_mul(i22, i27)
+341: i33 = int_add(i26, i32)
+347: i35 = int_add(i22, 1)
+351: setfield_gc(p15, i35, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+355: guard_value(i5, 0, descr=<Guard7f476d4d8818>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, i33]
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #19 LOAD_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #22 LIST_APPEND')
+365: p37 = getfield_gc(p13, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+369: guard_class(p37, 25936304, descr=<Guard7f476d4d87a0>) [p1, p0, p37, p13, p2, p3, p4, p6, p15, i33]
+382: p39 = getfield_gc(p13, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+386: i40 = getfield_gc(p39, descr=<FieldS list.length 8>)
+390: i42 = int_add(i40, 1)
+394: p43 = getfield_gc(p39, descr=<FieldP list.items 16>)
+394: i44 = arraylen_gc(p43, descr=<ArrayS 8>)
+394: call(ConstClass(_ll_list_resize_ge_trampoline__v921___simple_call__function__), p39, i42, descr=<Callv 0 ri EF=4>)
+506: guard_no_exception(descr=<Guard7f476d4d8728>) [p1, p0, i40, i33, p39, p2, p3, p4, p6, p13, p15, None]
+521: p47 = getfield_gc(p39, descr=<FieldP list.items 16>)
+532: setarrayitem_gc(p47, i40, i33, descr=<ArrayS 8>)
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #25 JUMP_ABSOLUTE')
+551: guard_not_invalidated(descr=<Guard7f476d4d86b0>) [p1, p0, p2, p3, p4, p6, p13, p15, i33]
+551: i49 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+559: i51 = int_lt(i49, 0)
guard_false(i51, descr=<Guard7f476d4d8638>) [p1, p0, p2, p3, p4, p6, p13, p15, i33]
+569: guard_value(p4, ConstPtr(ptr52), descr=<Guard7f476d4d85c0>) [p1, p0, p4, p2, p3, p6, p13, p15, i33]
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+595: label(p0, p1, p2, p3, p6, i33, p13, p15, i35, i28, i27, i26, p39, descr=TargetToken(139944753096272))
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+625: i53 = int_ge(i35, i28)
guard_false(i53, descr=<Guard7f476d4d8548>) [p1, p0, p15, i35, i27, i26, p2, p3, p6, p13, i33]
+638: i54 = int_mul(i35, i27)
+649: i55 = int_add(i26, i54)
+655: i56 = int_add(i35, 1)
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #19 LOAD_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #22 LIST_APPEND')
+659: i57 = getfield_gc(p39, descr=<FieldS list.length 8>)
+663: i58 = int_add(i57, 1)
+667: p59 = getfield_gc(p39, descr=<FieldP list.items 16>)
+667: i60 = arraylen_gc(p59, descr=<ArrayS 8>)
+667: call(ConstClass(_ll_list_resize_ge_trampoline__v921___simple_call__function__), p39, i58, descr=<Callv 0 ri EF=4>)
+744: setfield_gc(p15, i56, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+755: guard_no_exception(descr=<Guard7f476d4d84d0>) [p1, p0, i57, i55, p39, p2, p3, p6, p13, p15, None]
+770: p61 = getfield_gc(p39, descr=<FieldP list.items 16>)
+781: setarrayitem_gc(p61, i57, i55, descr=<ArrayS 8>)
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #25 JUMP_ABSOLUTE')
+793: guard_not_invalidated(descr=<Guard7f476d4d8458>) [p1, p0, p2, p3, p6, p13, p15, i55, None]
+793: i62 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+801: i63 = int_lt(i62, 0)
guard_false(i63, descr=<Guard7f476d4d83e0>) [p1, p0, p2, p3, p6, p13, p15, i55, None]
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+811: jump(p0, p1, p2, p3, p6, i55, p13, p15, i56, i28, i27, i26, p39, descr=TargetToken(139944753096272))
+840: --end of the loop--
[3304df359fe] jit-log-opt-loop}
[3304df6aed1] {jit-backend-counts
entry 0:1
TargetToken(139944714371104):1
TargetToken(139944714371192):4
entry 1:1
TargetToken(139944753096184):1
TargetToken(139944753096272):4
[3304df6da3a] jit-backend-counts}
